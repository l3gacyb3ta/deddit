import Head from 'next/head'
import styles from '../../styles/Home.module.css'
import React from 'react'
import ReactPlayer from 'react-player'

export async function getServerSideProps({ query }) {
  var og = require('open-graph')
  var subreddit = query.subreddit
  

  try {
    const res = await fetch("https://www.reddit.com/r/"+subreddit+".json");
    var posts = await res.json();
    var metadata = {}

    for (var num in posts.data.children) {
      var post = posts.data.children[num]
      if (post.data.post_hint == "link") {
        var i = post.data.url
        og(post.data.url, function (err, meta) {
          //console.log(meta)
          metadata[post.data.url] = meta
        })
      }
    }

    console.log(metadata)

    return {
      props: {
        posts: posts.data.children,
        meta: metadata
      }, // will be passed to the page component as props
    };
  } catch (error) {
    const err = error;
    return {
      props: {
        posts: [],
        err: JSON.stringify(err),
      }, // will be passed to the page component as props
    };
  }
}

function betterwrap(str, width, brk, cut) {
  // Cut is only for compatiblity with old wrap
  let splited = str.split(" ")
  let finalstring = ""
  let count = 0
  for (var part in splited) {
      count = count + 1
      finalstring = finalstring + splited[part] + " "
      if (count == width) {
          finalstring = finalstring + brk
          count = 0
      }   
  }

  return finalstring
}

export default function Home(props) {
  var posts = props['posts']
  var metadata = props['meta']


  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="stylesheet" href="https://unpkg.com/blocks.css/dist/blocks.min.css" />
      </Head>

      <main className={styles.main}>
      <div><h1 className={styles.title}>Deddit</h1></div>
        <div className={styles.grid}>
        
          {
            Object.entries(posts).map(([key, post]) => {
              //console.log(post)
              let type = post.data.post_hint;
              // console.log(type)
              // console.log(Object.keys(post.data))

              if (type == "image") {
                return (
                  <div className="wrapper fixed block" key={key}>
                    <div>
                      <h2 className={"block fixed " + styles.textcenter} dangerouslySetInnerHTML={{__html: betterwrap(post.data.title, 7, '<br/>', true)}}></h2>
                      <a href={post.data.url}><img className={styles.imagecenter} src={post.data.url} height="300" /></a>
                      <a className={styles.textcenter} href={"/u/" + post.data.author}>@{post.data.author}</a>
                    </div>
                  </div>
                )
              }
              else if (type == "link") {
                console.log(post.data.metadata)
                var metadata={image:""}

                return (
                  <div className="wrapper fixed block" key={key}>
                    <div>
                    <h2 className={"block fixed " + styles.textcenter} dangerouslySetInnerHTML={{__html: betterwrap(post.data.title, 7, '<br/>', true)}}></h2>
                      <a className={styles.link} href={post.data.url}><h3>{post.data.title}</h3></a>
                      <img src = {metadata.image}></img>
                    </div>
                  </div>
                )
              }
              else if (type == "hosted:video") {
                let src = post.data.media.reddit_video.fallback_url
                // console.log(post.data)
                // console.log(src)
                return (
                  <div className="wrapper fixed block" key={key}>
                    <div>
                      <h2 className={"block fixed " + styles.textcenter} dangerouslySetInnerHTML={{__html: betterwrap(post.data.title, 7, '<br/>', true)}}></h2>
                      <ReactPlayer url={src} controls={true} />
                    </div>
                  </div>
                )
              }
              else if (type == "rich:video") {
                let thumb = post.data.media.oembed.thumbnail_url
                // console.log(post.data)
                //console.log(html)
                // let src = ""
                
                return (
                  <div className="wrapper fixed block" key={key}>
                    <div>
                      <h2 className={"block fixed " + styles.textcenter} dangerouslySetInnerHTML={{__html: betterwrap(post.data.title, 7, '<br/>', true)}}></h2>
                      <img src={thumb}></img>
                    </div>
                  </div>
                )
              }
              else {
                return (
                  <div className="wrapper fixed block" key={key}>
                    <div>
                      <h2 className={"block fixed " + styles.textcenter} dangerouslySetInnerHTML={{__html: betterwrap(post.data.title, 7, '<br/>', true)}}></h2>
                      <p>{type}</p>
                    </div>
                  </div>
                )
              }
            })
          }
        </div>
      </main>
    </div>
  )
}
